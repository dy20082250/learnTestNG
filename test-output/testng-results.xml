<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="26651" started-at="2017-09-10T17:12:58Z" finished-at="2017-09-10T17:13:25Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="26651" started-at="2017-09-10T17:12:58Z" finished-at="2017-09-10T17:13:25Z">
      <class name="com.wdy.deeplearn.ng.SingleLogTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="beforeSuite" is-config="true" duration-ms="5302" started-at="2017-09-11T01:12:53Z" finished-at="2017-09-11T01:12:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="intentionalFailure()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="intentionalFailure" duration-ms="12" started-at="2017-09-11T01:12:58Z" finished-at="2017-09-11T01:12:58Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[intentional failure]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: intentional failure
	at com.wdy.deeplearn.ng.SingleLogTest.intentionalFailure(SingleLogTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailure -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="afterMethod" is-config="true" duration-ms="324" started-at="2017-09-11T01:13:02Z" finished-at="2017-09-11T01:13:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=intentionalFailure status=FAILURE method=SingleLogTest.intentionalFailure()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="passTest()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="passTest" duration-ms="3" started-at="2017-09-11T01:13:02Z" finished-at="2017-09-11T01:13:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="afterMethod" is-config="true" duration-ms="43" started-at="2017-09-11T01:13:02Z" finished-at="2017-09-11T01:13:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=SingleLogTest.passTest()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testMethod()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="testMethod" duration-ms="19067" started-at="2017-09-11T01:13:02Z" finished-at="2017-09-11T01:13:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Actual value '百度一下，你就知道' not equals Expect value 'something new', Failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Actual value '百度一下，你就知道' not equals Expect value 'something new', Failed
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.asserts.Assertion$6.doAssert(Assertion.java:157)
	at org.testng.asserts.Assertion.executeAssert(Assertion.java:30)
	at org.testng.asserts.Assertion.doAssert(Assertion.java:15)
	at org.testng.asserts.Assertion.fail(Assertion.java:154)
	at com.wdy.deeplearn.ng.FrameAssertion.fail(FrameAssertion.java:10)
	at com.wdy.deeplearn.ng.FrameAssertion.equals(FrameAssertion.java:19)
	at com.wdy.deeplearn.ng.SingleLogTest.testMethod(SingleLogTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="afterMethod" is-config="true" duration-ms="49" started-at="2017-09-11T01:13:25Z" finished-at="2017-09-11T01:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod status=FAILURE method=SingleLogTest.testMethod()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test_1()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="test_1" duration-ms="2" started-at="2017-09-11T01:13:25Z" finished-at="2017-09-11T01:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="afterMethod" is-config="true" duration-ms="46" started-at="2017-09-11T01:13:25Z" finished-at="2017-09-11T01:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_1 status=SUCCESS method=SingleLogTest.test_1()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.wdy.deeplearn.ng.SingleLogTest@5ae9a829]" name="afterSuite" is-config="true" duration-ms="22" started-at="2017-09-11T01:13:30Z" finished-at="2017-09-11T01:13:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.wdy.deeplearn.ng.SingleLogTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
